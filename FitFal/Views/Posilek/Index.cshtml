@model FitFalMVC.Application.ViewModels.Meal2VmDirector.MealDetailsVm

@{
    ViewBag.Title = "Dziennik dietetyczny";
    Layout = "_Layout";
}

<h1>Dziennik dietetyczny</h1>

<form id="mealForm" asp-action="Index" asp-controller="Posilek" method="get">
    <div class="row">
        <label for="mealDayId">Wybierz datę:</label>
        @{
            string startDateValue = Model.Data != default(DateTime) ? Model.Data.ToString("yyyy-MM-dd") : "";
        }
        <input id="mealDayId" name="selectedDate" type="date" value="@startDateValue"/>
        <button type="button" onclick="location.href='@Url.Action("AddMealToDay", new { mealData = startDateValue })'">Stwórz nowy posiłek</button>

        <table class="table">
            <tbody>
            @if (Model.Meals == null || !Model.Meals.Any())
            {
                <p>Brak posiłków na wybraną datę</p>
            }
            else
            {
                foreach (var meal in Model.Meals)
                {
                    var totalCaloriesForMeal = meal.Products != null ? Math.Round(meal.Products.Sum(product => product.Calories * product.Grammage / 100.0), 2) : 0;
                    var totalProteinForMeal = meal.Products != null ? Math.Round(meal.Products.Sum(product => product.Protein * product.Grammage / 100.0), 2) : 0;
                    var totalFatForMeal = meal.Products != null ? Math.Round(meal.Products.Sum(product => product.Fat * product.Grammage / 100.0), 2) : 0;
                    var totalCarboForMeal = meal.Products != null ? Math.Round(meal.Products.Sum(product => product.Carbohydrates * product.Grammage / 100.0), 2) : 0;

                    <table class="table">
                        <thead>
                        <tr>
                            <th> @meal.Name </th>
                            <th>Gramatura(g)</th>
                            <th>Kalorie(kcal)</th>
                            <th>Białko(g)</th>
                            <th>Tłuszcz(g)</th>
                            <th>Węglowodany(g)</th>
                            <th>
                                <button type="button" onclick="location.href='@Url.Action("ProductList", new { mealId = meal.Id })'">Dodaj produkt</button>
                            </th>
                        </tr>
                        </thead>
                        <tbody>
                        @if (meal.Products == null || !meal.Products.Any())
                        {
                            <tr>
                                <td colspan="2">Brak produktów w tym posiłku</td>
                            </tr>
                        }
                        else
                        {
                            @foreach (var product in meal.Products)
                            {
                                var calculatedCalories = Math.Round(product.Calories * product.Grammage / 100.0, 2);
                                var calculatedProtein = Math.Round(product.Protein * product.Grammage / 100.0, 2);
                                var calculatedCFat = Math.Round(product.Fat * product.Grammage / 100.0, 2);
                                var calculatedCarbo = Math.Round(product.Carbohydrates * product.Grammage / 100.0, 2);
                                <tr>
                                    <td>@Html.DisplayFor(modelProduct => product.Name)</td>
                                    <td>@Html.DisplayFor(modelProduct => product.Grammage)g</td>
                                    <td>@Html.DisplayFor(modelProduct => calculatedCalories)Kcal</td>
                                    <td>@Html.DisplayFor(modelProduct => calculatedProtein)g</td>
                                    <td>@Html.DisplayFor(modelProduct => calculatedCFat)g</td>
                                    <td>@Html.DisplayFor(modelProduct => calculatedCarbo)g</td>
                                    <td>
                                        @Html.ActionLink("Edytuj", "EditGrammage", new { mealId = meal.Id })|
                                        @Html.ActionLink("Usuń", "Delete", new { id = product.Id, mealData = startDateValue })
                                    </td>
                                </tr>
                            }
                        }
                        <tr>
                            <th>Podsumowanie</th>
                            <td></td>
                            <td>@totalCaloriesForMeal Kcal</td>
                            <td>@totalProteinForMeal g</td>
                            <td>@totalFatForMeal g</td>
                            <td>@totalCarboForMeal g</td>
                            <td></td>
                        </tr>
                        <td>
                            <button type="button" onclick="location.href='@Url.Action("DeleteMeal", new { mealId = meal.Id, mealData = startDateValue })'">Usuń Posiłek</button>
                        </td>
                        </tbody>
                    </table>
                }
            }
        </table>
    </div>
</form>

@{
    var totalCaloriesForDay = Model.Meals != null ? Math.Round(Model.Meals.Sum(meal => meal.Products != null ? meal.Products.Sum(product => product.Calories * product.Grammage / 100.0) : 0), 2) : 0;
    var totalProteinForDay = Model.Meals != null ? Math.Round(Model.Meals.Sum(meal => meal.Products != null ? meal.Products.Sum(product => product.Protein * product.Grammage / 100.0) : 0), 2) : 0;
    var totalFatForDay = Model.Meals != null ? Math.Round(Model.Meals.Sum(meal => meal.Products != null ? meal.Products.Sum(product => product.Fat * product.Grammage / 100.0) : 0), 2) : 0;
    var totalCarboForDay = Model.Meals != null ? Math.Round(Model.Meals.Sum(meal => meal.Products != null ? meal.Products.Sum(product => product.Carbohydrates * product.Grammage / 100.0) : 0), 2) : 0;
}

<div id="dailySummary">
    <h3>Podsumowanie Dnia</h3>
    <p>Kalorie: @totalCaloriesForDay Kcal</p>
    <p>Białko: @totalProteinForDay g</p>
    <p>Tłuszcz: @totalFatForDay g</p>
    <p>Węglowodany: @totalCarboForDay g</p>
</div>

<style>
    body {
        margin-bottom: 70px; 
    }
    #dailySummary {
        position: fixed;
        bottom: 0;
        left: 0;
        width: 100%;
        background-color: #f8f9fa;
        padding: 5px 10px; 
        border-top: 1px solid #dee2e6;
        text-align: center;
        z-index: 1000; 
        font-size: 0.9em; 
    }
    #dailySummary p {
        margin: 2px 0; 
    }
    #dailySummary h3 {
        margin: 0;
        padding: 0;
        font-size: 1em; 
    }
</style>

<script>
    document.getElementById("mealDayId").addEventListener("change", function() {
        document.getElementById("mealForm").submit(); 
    });
</script>
